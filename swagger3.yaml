openapi: 3.0.0
info:
  title: Example API
  version: 1.0.0
servers:
  - url: http://localhost:5000/

paths:
  /user/createUser:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: "string"
                  example: "shani"
                lastName:
                  type: "string"
                  example: "maurya"
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  firstName:
                    type: "string"
                    example: "shani"
                  lastName:
                    type: "string"
                    example: "maurya"
  
  /user/updateUser:
    put:
      summary: "update a new user"
      description: "update a new user with the provided data"
      parameters:
        - in: query
          name: id
          description: "User Id"
          required: true
          schema:
            type: "integer"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: "string"
                  example: "shani"
                lastName:
                  type: "string"
                  example: "maurya"
      responses:
        200:
          description: "User Updated Successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "User Updated Successfully"
        400:
          description: "User Not Updated"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: "User Not Updated"
        500:
          description: "server error"