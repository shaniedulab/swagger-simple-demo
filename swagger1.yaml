swagger: "2.0"
info:
  title: "User API"
  version: "1.0.0"
basePath: "/"
schemes:
  - "http"
consumes:
  - "application/json"
produces:
  - "application/json"

paths:
# create route document for user/createUser routes
  /user/createUser:
    post:
      summary: "Create a new user"
      description: "Creates a new user with the provided data"
      parameters:
        - in: body
          name: user
          description: "User object that needs to be created"
          required: true
          schema:
            type: object
            properties:
              firstName:
                type: "string"
                example: "shani"
              lastName:
                type: "string"
                example: "maurya"
      responses:
        201:
          description: "User Created Successfully"
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 201
              message:
                type: string
                example: "User Created Successfully"
              user:
                $ref: "#/definitions/User"
        400:
          description: "User Not Created"
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 400
              message:
                type: string
                example: "User Not Created"
        500:
          description: "server error"
          # message:
          #   $ref: "#/definitions/internalServerError"
# update route document for user/updateUser routes
  /user/updateUser:
    put:
      summary: "update a new user"
      description: "update a new user with the provided data"
      parameters:
        - in: body
          name: user
          description: "User object that needs to be update"
          required: true
          schema:
            type: object
            properties:
              firstName:
                type: "string"
                example: "shani"
              lastName:
                type: "string"
                example: "maurya"
        - in: query
          name: id
          description: "User Id"
          required: true
          type: "integer"
          # schema:
          #   type: "integer"
      responses:
        200:
          description: "User Updated Successfully"
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              message:
                type: string
                example: "User Updated Successfully"
              user:
                $ref: "#/definitions/User"
        400:
          description: "User Not Updated"
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 400
              message:
                type: string
                example: "User Not Updated"
        500:
          description: "server error"
          # message:
          #   $ref: "#/definitions/internalServerError"
# get route document for user/updateUser routes
  # /user/allUsers:
  #     get:
  #     summary: "get all user"
  #     description: "get all user with the provided data"
  #     parameters:
  #       - in: body
  #         name: user

definitions:
  User:
    type: object
    properties:
      id:
        type: "integer"
        example: "1"
      firstName:
        type: "string"
        example: "akash"
      lastName:
        type: "string"
        example: "maurya"
  # internalServerError:
  #   type: "object"
  #     properties:
  #       status:
  #         type: integer
  #         example: 500
  #       message:
  #         type: string
  #         example: "Internal Server Error"
  
